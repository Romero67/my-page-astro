---
import ThemeIcon from '../ThemeIcon.astro'
import LangIcon from '../LangIcon.astro'
import moonSvg from "../../images/icon-moon.svg?raw";
import sunSvg from "../../images/icon-sun.svg?raw";
import esLang from "../../lang/es.json";
import enLang from "../../lang/en.json";
---


<header class="header-mobile">
  <div class="logo">
    <a class="header-logo-mobile" href="#">
      MR
     </a>
  </div>
  <div class="switches">
    <input type="checkbox" id="darkmode-checkbox" class="darkmode-input">
    <div class="switch-darkmode">
      <label for="darkmode-checkbox" class="darkmode-switch">
        <div class="toggle"></div>
        <div class="names">
          <Fragment set:html={sunSvg} />
          <Fragment set:html={moonSvg} />
        </div>
      </label>
    </div>
  </div>
</header>

<header class="header desktop">
    <div class="nav">
     <a class="header-logo-desktop" href="#">
      MR
     </a>
     <ul class="nav-bar">
      <li class="nav-item">
        <a href="#tab1" lang="es">{esLang.items_nav.initation}</a>
        <a href="#tab1" lang="en">{enLang.items_nav.initation}</a>
      </li>
      <li class="nav-item">
        <a href="#tab2" lang="es">{esLang.items_nav.about}</a>
        <a href="#tab2" lang="en">{enLang.items_nav.about}</a>
      </li>
      <li class="nav-item">
        <a href="#tab3" lang="es">{esLang.items_nav.contact}</a>
        <a href="#tab3" lang="en">{enLang.items_nav.contact}</a>
      </li>
      <li>
        <ThemeIcon 
          labelBtn={esLang.items_nav.label_btn_theme}
          lang="es"/>
        <ThemeIcon
          labelBtn={enLang.items_nav.label_btn_theme}
          lang="en"/>
      </li>
      <LangIcon />
     </ul>
    </div>  
</header>



<script is:inline type="module">

    const changeTheme = (theme) =>{
        if (theme === 'light') {
            document.body.classList.remove('theme--dark');
            document.querySelectorAll('.sun').forEach(el => el.style.display = 'none')
            document.querySelectorAll('.moon').forEach(el => el.style.display = 'inherit')
        } else {
            document.body.classList.add('theme--dark');
            document.querySelectorAll('.moon').forEach(el => el.style.display = 'none')
            document.querySelectorAll('.sun').forEach(el => el.style.display = 'inherit')
        }
    }

    const theme = (() => {
      if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
        return localStorage.getItem('theme');
      }
      if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
        return 'theme--dark';
      }
      return 'light';
    })();
  
    changeTheme(theme)
  
    localStorage.setItem('theme', theme);
  
    const handleToggleChangeDarkMode = () => {
      console.log("cambiando!")
      const body = document.body;
      body.classList.toggle('theme--dark', !body.classList.contains('theme--dark'));
  
      const isDark = body.classList.contains('theme--dark');
      const theme = isDark ? 'theme--dark' : 'light'
      localStorage.setItem('theme', theme);

      changeTheme(theme)
  
      document.querySelector('.menu-lateral').style.left = '-100%'
      document.body.style.overflow = 'auto'
    }
  
    const btnsTheme = document.querySelectorAll('.darkmode-input');
    console.log("btnsTheme: ",btnsTheme)
    // Agrega un evento de clic a cada elemento
    btnsTheme.forEach(function(elemento) {
      elemento.addEventListener('change', handleToggleChangeDarkMode);
    });
</script>

<script is:inline type="module">
  let userLanguage = navigator.language || navigator.userLanguage;
    const hideHtml = (langToDelete) =>{
      if(!langToDelete){
        userLanguage = navigator.language || navigator.userLanguage;
        langToDelete =  (userLanguage && userLanguage.startsWith('en')) ? 'es' : 'en'
      }
      
      const elementsWithLang = document.querySelectorAll("[lang]");
      elementsWithLang.forEach((element) => {
              if (element.tagName.toLowerCase() === 'html') return

              if (element.getAttribute("lang") === langToDelete) {
                  element.classList.add('hide');
                  element.classList.remove('display-inherit');
                }
                if (element.getAttribute("lang") !== langToDelete) {
                  element.classList.add('display-inherit');
                  element.classList.remove('hide');
              }
          });
  
      localStorage.setItem('mr_lang', langToDelete)
      toggleLangBtns(langToDelete)

      
    }
  
    const toggleLangBtns = (lang) =>{
      if(lang == 'es'){
        document.querySelectorAll('.text-en').forEach(el => {
          el.classList.add('hide')
          el.classList.remove('display-inherit')
        })
        document.querySelectorAll('.text-es').forEach(el => {
          el.classList.add('display-inherit')
          el.classList.remove('hide')
        })
        document.documentElement.lang = "en"
      }else{
        document.querySelectorAll('.text-es').forEach(el =>{
          el.classList.add('hide')
          el.classList.remove('display-inherit')
        })
        document.querySelectorAll('.text-en').forEach(el => {
          el.classList.add('display-inherit')
          el.classList.remove('hide')
        })
        document.documentElement.lang = "es"
      }
    }
  
    const getLang = () =>{
      if (typeof localStorage !== 'undefined' && localStorage.getItem('mr_lang')) {
        return localStorage.getItem('mr_lang');
      }
      return false;
    }
  
    const handleToggleLangClick = () => {
      const lang = getLang() == 'es' ? 'en' : 'es'
      hideHtml(lang)
      document.querySelector('.menu-lateral').style.left = '-100%'
      document.body.style.overflow = 'auto'
    }
  
    hideHtml(getLang())
    const btnsLang = document.querySelectorAll('.langToggle');

    btnsLang.forEach(function(elemento) {
        elemento.addEventListener('click', handleToggleLangClick);
    });
  </script>

  <script is:inline>

    function initShowHideHeader() {
      function handleScroll() {
        if (window.scrollY > 0) {
          document.querySelector('.header').classList.add('scrolled');
          document.querySelector('.header-mobile').classList.add('scrolled');
        } else {
          document.querySelector('.header').classList.remove('scrolled');
          document.querySelector('.header-mobile').classList.remove('scrolled');
        }
      }

      window.addEventListener('scroll', handleScroll);
    }

    // Llama a la funci√≥n para inicializar el evento de scroll
    initShowHideHeader();

  </script>